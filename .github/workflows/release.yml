name: Release

on:
  push:
    tags: 'v*'

env:
  GO_VERSION: 1.17.5

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: |
          mkdir bin
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-linux-amd64
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-linux-arm64
          CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-linux-armv7
          CGO_ENABLED=0 GOOS=linux GOARCH=ppc64le go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-linux-ppc64le
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-windows-x86_64.exe
          CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-windows-arm64.exe
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-windows-x86.exe
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-darwin-amd64
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-metadata/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-metadata-darwin-arm64

      - name: Prepare vendored sources
        run: |
          VERSION=${GITHUB_REF/refs\/tags\//}
          go mod vendor
          echo "${VERSION}" > VERSION.txt
          tar --exclude=bin -cJvf sftpgo-plugin-metadata_${VERSION}_src_with_deps.tar.xz *

      - name: Create release
        run: |
          VERSION=${GITHUB_REF/refs\/tags\//}
          gh release create "${VERSION}" -t "${VERSION}"
          gh release upload "${VERSION}" bin/* --clobber
          gh release upload "${VERSION}" sftpgo-plugin-metadata_${VERSION}_src_with_deps.tar.xz --clobber
          gh release view "${VERSION}"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
